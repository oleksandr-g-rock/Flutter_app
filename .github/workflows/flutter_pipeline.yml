name: Flutter CI/CD Pipeline

on:
  push:
    branches:
      - test-branch

defaults:
  run:
    working-directory: ./flutter_application_main

jobs:
  test-build-release:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - uses: subosito/flutter-action@v2
      with:
          channel: 'stable'
    - name: Cache Flutter dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.pub-cache
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-
    - name: Test step - Set correct file permissions
      run: find . -type f -iname "*" -exec chmod 755 {} \;
    - name: Test step - Install dependencies
      run: flutter pub get
    - name: Test step - Run analyze
      run: flutter analyze
    - name: Test step - Check code formatting
      run: flutter format --set-exit-if-changed .
    - name: Test step - Run flutter tests
      run: flutter test
    - name: Test step - Run real integration tests for Android
      run: flutter test integration_test/app_test.dart

    - name: Build step - Build app for Android
      run: flutter build apk --release

    - name: Release step - Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Release step - Upload Android Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./flutter_application_main/build/app/outputs/flutter-apk/app-release.apk
        asset_name: App-Android-${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
